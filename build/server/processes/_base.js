// Generated by CoffeeScript 1.9.0
var EventEmitter, Logger, Process, log, uuid, _;

_ = require('lodash');

uuid = require('uuid');

Logger = require('../utils/logging');

log = Logger('imap:reporter');

EventEmitter = require('events').EventEmitter;

module.exports = Process = (function() {
  function Process(options) {
    this.errors = [];
    this.options = options;
    this.id = this.code + uuid.v4();
    log.debug("constructor process " + this.id);
  }

  Process.prototype.initialize = function() {
    throw new Error('initialize should be overriden by process subclass');
  };

  Process.prototype.summary = function() {
    return {
      id: this.id,
      finished: this.finished,
      done: this.getProgress(),
      total: 1,
      errors: this.errors,
      box: this.box,
      account: this.account,
      code: this.code,
      objectID: this.objectID,
      firstImport: this.firstImport
    };
  };

  Process.prototype.clone = function() {
    return new this.constructor(this.options);
  };

  Process.prototype.getProgress = function() {
    return 0.5;
  };

  Process.prototype.abort = function(callback) {
    return this.aborted = true;
  };

  Process.prototype.run = function(callback) {
    log.debug("run process " + this.id);
    return this.initialize(this.options, callback);
  };

  Process.prototype.onError = function(err) {
    this.errors.push(Logger.getLasts() + "\n" + err.stack);
    return log.error("reporter err", err.stack);
  };

  return Process;

})();
